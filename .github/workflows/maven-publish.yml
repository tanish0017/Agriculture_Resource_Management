# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
                    - name: Setup Java Development Kits built by Oracle
  # You may pin to the exact commit or the version.
  # uses: oracle-actions/setup-java@2e744f723b003fdd759727d0ff654c8717024845
  uses: oracle-actions/setup-java@v1.4.0
  with:
    # Site to download JDK from: `oracle.com` or `jdk.java.net`
    website: # default is oracle.com
    # Feature release number or project name, defaults to `23`
    release: # default is 23
    # Additional version information, defaults to `latest`
    version: # default is latest
    # Install the downloaded JDK archive file by running actions/setup-java, defaults to `true`
    install: # default is true
    # Controls which value is passed as `java-version` to actions/setup-java, defaults to `PARSE_URI` if `release` starts with a digit, else it defaults to `HASH_URI`
    install-as-version: # optional
    # URI of JDK archive file to download
    uri: # optional
          
